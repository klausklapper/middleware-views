function e(){return(e=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}const t={version:"0.0.3",name:"views",views:{},settings:{enable:!1,basePath:"/",selector:"#app",notfound:null},loadStart:new Event("pinecone-start"),loadEnd:new Event("pinecone-end"),init(t,n){var i,o,r,s;if(null!=n&&null!=(i=n.middlewares)&&i.render)throw new Error(`Pinecone Router ${this.name}: Cannot use views middleware along with render.`);if(this.settings=e({},this.settings,null!=(o=null==n||null==(r=n.middlewares)?void 0:r[this.name])?o:{}),"body"==(null==(s=this.settings)?void 0:s.selector))throw new Error(`Pinecone Router ${this.name}: Do not use body as the selector, it will cause the router component to be removed`);window.PineconeRouter.settings.allowNoHandler=!0},onBeforeRouteProcessed(e,t,n){if(this.settings.enable){if(0==e.hasAttribute("x-view"))throw new Error(`Pinecone Router ${this.name}: route must have an x-view attribute when using x-views.`);let t=e.getAttribute("x-view");"/"!=this.settings.basePath&&(t=this.settings.basePath+t),"notfound"==n?this.settings.notfound=t:this.views[n]=t}},onHandlersExecuted(e,t,n,i){if(this.settings.enable){let t=i?this.settings.notfound:this.views[e.path];if(null==t)return;fetch(t).then(e=>e.text()).then(e=>{var t;return t=e,document.querySelector(this.settings.selector).innerHTML=t,window.dispatchEvent(this.loadEnd),!1}).catch(e=>{document.querySelector("[x-router][x-data]").dispatchEvent(new CustomEvent("fetch-error",{detail:e})),console.error(`Pinecone Router ${this.name}: Fetch Error: ${e}`)})}},onBeforeHandlersExecuted(e,t,n,i){window.dispatchEvent(this.loadStart)}};null==window.PineconeRouterMiddlewares?window.PineconeRouterMiddlewares=[t]:window.PineconeRouterMiddlewares.push(t);
//# sourceMappingURL=index.modern.js.map
